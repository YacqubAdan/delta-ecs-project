name: Terraform Apply on Prod

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'Type "yes" to confirm deployment'
        required: true
        default: 'no' 

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    env:
      environment: prod
    steps:
    - name: "if no confirmation, exit"
      run: |
        if [ "${{ github.event.inputs.confirmation }}" != "yes" ]; then
          echo "Exiting without deployment"
          exit 1
        fi
      shell: bash

    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Install Vault CLI
      run: |
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
        sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
        sudo apt-get update && sudo apt-get install vault

    - name: Authenticate with Vault
      run: |
        export VAULT_ADDR=${{ vars.VAULT_ADDR }}
        VAULT_ROLE_ID=${{ secrets.VAULT_ROLE_ID }}
        VAULT_SECRET_ID=${{ secrets.VAULT_SECRET_ID }}
        VAULT_TOKEN=$(vault write -field=token auth/approle/login role_id=$VAULT_ROLE_ID secret_id=$VAULT_SECRET_ID)

        echo "::add-mask::$VAULT_TOKEN"
        
        echo "VAULT_TOKEN=${VAULT_TOKEN}" >> $GITHUB_ENV

    - name: Retrieve AWS Secrets from Vault
      run: |
        export VAULT_ADDR=${{ vars.VAULT_ADDR }}
        export VAULT_TOKEN=${{ env.VAULT_TOKEN }}
        export AWS_ACCESS_KEY_ID=$(vault kv get -field=AWS_ACCESS_KEY kv/aws-secrets/aws-access)
        export AWS_SECRET_ACCESS_KEY=$(vault kv get -field=AWS_SECRET_KEY kv/aws-secrets/aws-access)
        echo "AWS Credentials Retrieved Successfully"

        echo "::add-mask::$AWS_ACCESS_KEY_ID"
        echo "::add-mask::$AWS_SECRET_ACCESS_KEY"

        echo "AWS_ACCESS=${AWS_ACCESS_KEY_ID}" >> $GITHUB_ENV
        echo "AWS_SECRET=${AWS_SECRET_ACCESS_KEY}" >> $GITHUB_ENV

    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v4
      with:
          aws-region: eu-west-2
          aws-access-key-id: ${{ env.AWS_ACCESS }}
          aws-secret-access-key: ${{ env.AWS_SECRET }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.3.0"

    - name: Terraform Init
      run: terraform init
      working-directory: terraform

    - name: Terraform Apply
      run: |
        terraform select ${{ env.environment }} && terraform apply -auto-approve
      working-directory: terraform
