name: 'Terraform Plan'

on:
   workflow_dispatch:
    inputs:
      confirmation:
        description: 'Type "yes" to confirm deployment'
        required: true
        default: 'no'

defaults:
 run:
  working-directory: ./terraform

jobs:
  terraform:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
   
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Vault CLI
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install vault

      - name: Authenticate with Vault
        run: |
          export VAULT_ADDR=${{ vars.VAULT_ADDR }}
          VAULT_ROLE_ID=${{ secrets.VAULT_ROLE_ID }}
          VAULT_SECRET_ID=${{ secrets.VAULT_SECRET_ID }}
          VAULT_TOKEN=$(vault write -field=token auth/approle/login role_id=$VAULT_ROLE_ID secret_id=$VAULT_SECRET_ID)
          echo "VAULT_TOKEN=${VAULT_TOKEN}" >> $GITHUB_ENV

      - name: Retrieve AWS Secrets from Vault
        run: |
          export VAULT_ADDR=${{ vars.VAULT_ADDR }}
          export VAULT_TOKEN=${{ env.VAULT_TOKEN }}
          export AWS_ACCESS_KEY_ID=$(vault kv get -field=AWS_ACCESS_KEY kv/aws-secrets/aws-access)
          export AWS_SECRET_ACCESS_KEY=$(vault kv get -field=AWS_SECRET_KEY kv/aws-secrets/aws-access)
          echo "AWS Credentials Retrieved Successfully"

          echo "::add-mask::$AWS_ACCESS_KEY_ID"
          echo "::add-mask::$AWS_SECRET_ACCESS_KEY
          
          echo "AWS_ACCESS=${AWS_ACCESS_KEY_ID}" >> $GITHUB_ENV
          echo "AWS_SECRET=${AWS_SECRET_ACCESS_KEY}" >> $GITHUB_ENV

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
            aws-region: eu-west-2
            aws-access-key-id: ${{ env.AWS_ACCESS }}
            aws-secret-access-key: ${{ env.AWS_SECRET }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.3.0"
        
      - name: Terraform Init
        id: init
        run: terraform init 
        
      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform validate
        
      - name: Run tflint
        uses: terraform-linters/setup-tflint@v4
      - run: tflint --init && tflint
   
      - name: Run Checkov Security Scan
        id: checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ./terraform

      - name: Terraform Plan
        id: plan
        run: terraform plan
